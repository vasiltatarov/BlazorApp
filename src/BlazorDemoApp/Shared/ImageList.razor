@using System.Reflection.Metadata
@inject AuthenticationStateProvider _authenticationStateProvider
@inject ILikeService _likeService

<link href="https://fonts.googleapis.com/css?family=Rokkitt" rel="stylesheet">
<link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet">

<section class="hero">
    <div class="container">
        <div class="row">
            <div class="col-sm-12 col-md-8 offset-md-2 col-lg-8 offset-lg-2">
                @foreach (var image in Images)
                {
                    <div class="cardbox shadow-lg bg-white">
                        <div class="cardbox-heading">
                            <div class="media m-0">
                                <div class="d-flex mr-3">
                                    <a>
                                        <img class="img-fluid rounded-circle" src="214061821_211139737444460_8377007395349649380_n.jpg" alt="@image.User">
                                    </a>
                                </div>
                                <div class="media-body">
                                    <p class="m-0">@image.User</p>
                                    <small><span><i class="icon ion-md-time"></i>@image.CreatedOn</span></small>
                                </div>
                            </div>
                        </div>
                        <div class="cardbox-item">
                            <img class="img-fluid img-width" src="@image.Name" alt="@image.Name">
                        </div>
                        <div class="cardbox-base">
                            <ul>
                                <li>
                                    <a href="Javascript:void(0)">
                                        <i @onclick="() => IncrementLike(image.Id)" class="fa fa-thumbs-up text-primary"></i>
                                    </a>
                                </li>
                                <li>
                                    <a>
                                        <span>@image.LikeCount Likes</span>
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

@code {
    [Parameter]
    public IEnumerable<ImageServiceModel> Images { get; set; }

    private int Likes { get; set; }

    private string _userId;

    protected override async Task OnParametersSetAsync()
    {
        await GetClaimsPrincipalData();

        await base.OnParametersSetAsync();
    }

    private async Task GetClaimsPrincipalData()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _userId = user.Claims.FirstOrDefault().Value;
        }
        else
        {
            _userId = null;
        }
    }

    private async Task IncrementLike(int imageId)
    {
        await _likeService.Like(imageId, _userId);
    }
}